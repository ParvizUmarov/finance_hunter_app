import '../../domain/domain.dart';

class CategoryRepositoryTestImpl implements CategoryRepository {
  @override
  Future<List<CategoryModel>> getListOfAllCategories() async {
    return await _getListOfMockData();
  }

  @override
  Future<List<CategoryModel>> getListOfCategoryByType(bool isIncome) async {
    final result = await _getListOfMockData();
    return result.where((c) => c.isIncome == isIncome).toList();
  }

  Future<List<CategoryModel>> _getListOfMockData() async {
    await Future.delayed(const Duration(seconds: 2));
    return [
      CategoryModel(
        id: 0,
        name: "–ó–∞—Ä–ø–ª–∞—Ç–∞",
        emoji: "üí∞",
        isIncome: true,
      ),
      CategoryModel(
        id: 1,
        name: "–§—Ä–∏–ª–∞–Ω—Å",
        emoji: "üíª",
        isIncome: true,
      ),
      CategoryModel(
        id: 2,
        name: "–ó–∞—Ä–ø–ª–∞—Ç–∞",
        emoji: "üéÅ",
        isIncome: true,
      ),
      CategoryModel(
        id: 3,
        name: "–ü–æ–¥–∞—Ä–∫–∏",
        emoji: "üí∞",
        isIncome: true,
      ),
      CategoryModel(
        id: 4,
        name: "–ü—Ä–æ–¥—É–∫—Ç—ã",
        emoji: "üçé",
        isIncome: false,
      ),
      CategoryModel(
        id: 5,
        name: "–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç",
        emoji: "üöó",
        isIncome: false,
      ),
      CategoryModel(
        id: 6,
        name: "–ü—Ä–æ—Ü–µ–Ω—Ç—ã –ø–æ –≤–∫–ª–∞–¥–∞–º",
        emoji: "üè¶",
        isIncome: true,
      ),
      CategoryModel(
        id: 7,
        name: "–í–æ–∑–≤—Ä–∞—Ç –¥–æ–ª–≥–∞",
        emoji: "üîÑ",
        isIncome: true,
      ),

      CategoryModel(
        id: 8,
        name: "–ü—É—Ç–µ—à–µ—Å—Ç–≤–∏—è",
        emoji: "‚úàÔ∏è",
        isIncome: false,
      ),
      CategoryModel(
        id: 9,
        name: "–ü–æ–¥–ø–∏—Å–∫–∏",
        emoji: "üì∫",
        isIncome: false,
      ),

      CategoryModel(
        id: 10,
        name: "–•–æ–±–±–∏",
        emoji: "üé®Ô∏è",
        isIncome: false,
      ),
      CategoryModel(
        id: 11,
        name: "–ö—Ä–µ–¥–∏—Ç—ã",
        emoji: "üí≥",
        isIncome: false,
      ),
      CategoryModel(
        id: 12,
        name: "–ö—Ä–∞—Å–æ—Ç–∞",
        emoji: "üíÑ",
        isIncome: true,
      ),
      CategoryModel(
        id: 13,
        name: "–°–ø–æ—Ä—Ç",
        emoji: "üèãÔ∏è",
        isIncome: false,
      ),
    ];
  }
}